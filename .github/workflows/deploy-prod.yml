name: deploy-prod

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: gradle

      - name: Create application-secret.yml
        run: |
          pwd
          cd ./smeem-bootstrap/src/main/resources
          touch ./application-secret.yml
          echo "${{ secrets.APPLICATION_SECRET_YML }}" >> ./application-secret.yml
          cat ./application-secret.yml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_PROD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_PROD_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set FCM_JSON_PATH
        run: echo "FCM_JSON_PATH=smeem-output-notification/src/main/resources/firebase-config/smeem_fcm_prod.json" >> $GITHUB_ENV

      - name: Create FireBase JSON file From AWS
        run: aws s3 cp --region ap-northeast-2 ${{ secrets.AWS_S3_FCM_JSON_URI_PROD }} ${{ env.FCM_JSON_PATH }}

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
        shell: bash

      - name: Set docker
        uses: docker/setup-buildx-action@v2.9.1

      - name: Login docker
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN_USERNAME_PROD }}
          password: ${{ secrets.DOCKERHUB_LOGIN_ACCESSTOKEN_PROD }}

      - name: Build docker image
        run: |
          docker build --platform linux/amd64 -t smeemprod/smeem-prod:latest -f Dockerfile-prod .
          docker push smeemprod/smeem-prod:latest

  deploy-cd:
    needs: build
    runs-on: ubuntu-20.04

    steps:
      - name: SSH로 서버 접속
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RELEASE_SERVER_IP_PROD }}
          username: ${{ secrets.RELEASE_SERVER_USER_PROD }}
          key: ${{ secrets.RELEASE_SERVER_KEY_PROD }}
          script: |
            cd ~

            # deploy.sh 파일 다운로드
            wget https://raw.githubusercontent.com/Team-Smeme/Smeme-server-renewal/main/script/deploy.sh -O deploy.sh
            chmod +x deploy.sh

            # .env 파일 추가
            if ! grep -q "REGISTRY_URL=" .env; then
              echo "REGISTRY_URL=${{ secrets.REGISTRY_URL_PROD }}" >> .env
            fi
            if ! grep -q "IMAGE_NAME=" .env; then
              echo "IMAGE_NAME=${{ secrets.IMAGE_NAME_PROD }}" >> .env
            fi

            # 배포 스크립트 실행
            sudo ./deploy.sh
