name: CD-prod

on:
  push:
    branches: [ main ]

jobs:
  deploy-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Latest Repo
        uses: actions/checkout@v3
        # 최신 저장소에서 체크아웃

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
        # 자바 버전을 JDK 17로 설정

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_PROD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_PROD_SECRET_KEY }}
          aws-region: ap-northeast-2
        # AWS 자격 증명 설정

      - name: Set FCM JSON File Path
        run: |
          echo "FCM_JSON_PATH=smeem-output-notification/src/main/resources/firebase-config/smeem_fcm_prod.json" >> $GITHUB_ENV
        # FCM JSON 파일 위치 경로 설정

      - name: Create FCM JSON File from AWS
        run: aws s3 cp --region ap-northeast-2 ${{ secrets.AWS_S3_FCM_JSON_URI_PROD }} ${{ env.FCM_JSON_PATH }}
        # FCM JSON 파일 복사

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash
        # gradlew 파일에 실행 권한 부여

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash
        # 그래들로 빌드

      - name: Set Docker
        uses: docker/setup-buildx-action@v2.9.1
        # 도커 설정

      - name: Login Docker
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN_USERNAME_PROD }}
          password: ${{ secrets.DOCKERHUB_LOGIN_ACCESSTOKEN_PROD }}
        # 도커에 로그인

      - name: Docker Build
        run: |
          docker build --platform linux/amd64 -t smeemprod/smeem-prod:latest -f Dockerfile-prod .
          docker push smeemprod/smeem-prod:latest

  deploy-cd:
    needs: deploy-ci
    runs-on: ubuntu-latest
    # deploy-ci 이후 작업 실행

    steps:
      - name: Connect to EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RELEASE_SERVER_IP_PROD }}
          username: ${{ secrets.RELEASE_SERVER_USER_PROD }}
          key: ${{ secrets.RELEASE_SERVER_KEY_PROD }}
          script: |
            cd ~

            # deploy.sh 파일 다운로드
            wget https://raw.githubusercontent.com/Team-Smeme/Smeme-server-renewal/main/script/prod/deploy.sh -O deploy.sh
            chmod +x deploy.sh

            # 기존 .env 파일 삭제 및 새로 생성
            rm -f .env  # 기존 .env 파일을 삭제합니다.
            
            # .env 파일 새로 생성
            echo "REGISTRY_URL=${{ secrets.REGISTRY_URL_PROD }}" >> .env
            echo "IMAGE_NAME=${{ secrets.IMAGE_NAME_PROD }}" >> .env
            echo "SECRET_MANAGER_TOKEN=${{ secrets.SECRET_MANAGER_TOKEN }}" >> .env
            echo "SECRET_MANAGER_WORKSPACE_ID=${{ secrets.SECRET_MANAGER_WORKSPACE_ID }}" >> .env

            # 배포 스크립트 실행
            sudo ./deploy.sh
